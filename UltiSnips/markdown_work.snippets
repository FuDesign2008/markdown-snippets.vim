snippet workpl "产品需求分析与开发计划" b
# 产品需求分析与开发计划

## 0. 需求管理

1. 产品需求必须在正式开发之前明确，并纳入开发计划
1. 临时添加的需求
    - 优先拒绝，建议添加到下一个开发迭代中
    - 若非常重要，可考虑纳入开发计划

## 1. 资源

> -   罗列产品需求相关的资源

### 交互&设计

-   UE
-   UI

### 测试

-   自测 case

### 后台

-   后台 API

### 其他

-   总计划

## 2. 时间节点

| 时间节点     | 预计 | 实际 |
| :----------- | :--- | :--- |
| 产品需求明确 |      |      |
| UE/UI ready  |      |      |
| 开始开发     |      |      |
| 提测         |      |      |
| 上线         |      |      |

## 3. 模块划分及开发时间评估

> -   模块如何划分, 尽量具体
> -   每个模块预估开发时间，尽量准确
>     -   `预估时间 = 初始预估时间 \* 冗余系数` (比如 `1.2`、 `1.5`)
> -   每个模块是否存在技术难点，是否存在风险
> -   责任到人，明确每个模块的开发者

### 公共模块

1. 模块 A
1. 模块 B

### 页面 A

1. 模块 A
1. 模块 B

## 4. 问题与风险

> -   潜在的问题或风险
> -   可能的解决方式

1.  存在的问题或风险
    -   解决方案

## 5. 其他

1. 无
endsnippet


snippet workplan "产品需求分析与开发计划(复杂版)" b
# 产品需求分析与开发计划

## 0. 需求管理

1. 产品需求必须在正式开发之前明确，并纳入开发计划
1. 临时添加的需求
    - 优先拒绝，建议添加到下一个开发迭代中
    - 若非常重要，可考虑纳入开发计划

## 1. 资源

> 1. 罗列产品需求相关的资源

### 交互&设计

-   UE
-   UI

### 测试

-   自测 case

### 后台

-   后台 API

### 其他

-   总计划

## 2. Milestore

> 1. 分几个 milestore？
> 1. 每个 milestore 包含什么主要功能?
> 1. 确定各个 milestore 的上线时间, 并倒推提测等关键节点的具体时间

| Milestore | 功能 | 预计开始时间 | 预计提测时间 | 预计上线时间 | 具体计划                           |
| :-------- | :--- | :----------- | :----------- | :----------- | :--------------------------------- |
| 1         |      |              |              |              | [./path/to/m1.md](./path/to/m1.md) |
| 2         |      |              |              |              |                                    |

## 3. 问题与风险

> 1. 潜在的问题或风险
> 1. 可能的解决方式

1.  存在的问题或风险
    -   解决方案

## 4. 其他

1. 无
endsnippet


snippet workweekly "工作周报" b
# `date +%Y-%m-%d`工作周报

## 上周工作

### 1. 重要&紧急

1. TODO

### 2. 重要&不紧急

1. TODO

### 3. 不重要/不紧急

## 本周安排

### 1. 重要&紧急

1. TODO

### 2. 重要&不紧急

1. TODO

### 3. 不重要/不紧急
endsnippet
